<<<<<<< HEAD
---
import CollectionLayout from "@components/poetry/CollectionLayout.astro";
import { getEntries } from "@lib/contentParser";
import { sortByDate } from "@lib/sortFunctions";
import type { PoetryEntry } from "@/types";
import { getIndex } from "@lib/contentParser";

const entryIndex = (await getIndex("poetry")) as PoetryEntry;
const entries = (await getEntries("poetry", sortByDate)) as PoetryEntry[];
---

<CollectionLayout entryIndex={entryIndex} entries={entries} />
=======
---
import BaseLayout from "@components/base/BaseLayout.astro";
import SEO from "@components/common/SEO.astro";
const response = await fetch('https://dog.ceo/api/breeds/image/random');
const { message: dogImage } = await response.json();
---
<BaseLayout title="Eva Town Guestbook">
  <SEO title="Eva Town Guestbook" description="Leave a message in the Eva Town Guestbook!" />
  <h1>Eva Town Guestbook</h1>
  <p style="color: #b94a48; font-weight: bold;">Code names only. Sharing of identifiable information is prohibited when writing a postcard.</p>
  <img src={dogImage} alt="Random dog" style="max-width: 200px; border-radius: 12px; margin-bottom: 1rem;" />
  <form id="guestbook-form" style="margin-bottom: 2rem;">
    <label for="name">Name (randomized):</label><br />
    <input id="name" name="name" type="text" readonly style="margin-bottom: 1rem;" /><br />
    <label for="message">Message:</label><br />
    <textarea id="message" name="message" rows="3" required style="width: 100%; margin-bottom: 1rem;"></textarea><br />
    <button type="submit">Post to Guestbook</button>
  </form>
  <div id="guestbook-status" style="min-height:1.5em;margin-bottom:1em;color:#31708f;font-weight:bold;"></div>
  <div id="guestbook-entries">
    <h2>Recent Messages</h2>
    <ul id="messages-list"></ul>
  </div>
  <script type="module" client:load>
    async function fetchMessages() {
      const res = await fetch('/api/guestbook');
      const messages = await res.json();
      const ul = document.getElementById('messages-list');
      ul.innerHTML = '';
      messages.reverse().forEach(entry => {
        const li = document.createElement('li');
        li.innerHTML = `<strong>${entry.name}:</strong> ${entry.message} <span style='color:#888;font-size:0.8em;'>(${new Date(entry.timestamp).toLocaleString()})</span>`;
        ul.appendChild(li);
      });
    }
    fetchMessages();
    document.getElementById('guestbook-form').onsubmit = async (e) => {
      e.preventDefault();
      const name = document.getElementById('name').value;
      const message = document.getElementById('message').value;
      const statusDiv = document.getElementById('guestbook-status');
      statusDiv.textContent = '';
      if (!message) return;
      try {
        const res = await fetch('/api/guestbook', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, message })
        });
        if (res.ok) {
          statusDiv.style.color = '#31708f';
          statusDiv.textContent = 'Message posted!';
          document.getElementById('message').value = '';
          fetchMessages();
        } else {
          const err = await res.json();
          statusDiv.style.color = '#b94a48';
          statusDiv.textContent = err.error || 'Failed to post message.';
        }
      } catch (error) {
        statusDiv.style.color = '#b94a48';
        statusDiv.textContent = 'Network error. Please try again.';
      }
    };
    // Regenerate random name on page load
    document.getElementById('name').value = (function() {
      const adjectives = ["Brave", "Clever", "Gentle", "Mighty", "Quiet", "Swift", "Wise", "Happy", "Curious", "Sunny"];
      const animals = ["Bear", "Fox", "Otter", "Wolf", "Deer", "Hawk", "Rabbit", "Moose", "Lynx", "Beaver"];
      const adj = adjectives[Math.floor(Math.random() * adjectives.length)];
      const animal = animals[Math.floor(Math.random() * animals.length)];
      return adj + ' ' + animal;
    })();
  </script>
</BaseLayout>
>>>>>>> new-branch
